{{>partial_header}}
package {{packageName}}

import (
"context"
"net/http"
"errors"{{#imports}}
    "{{import}}"{{/imports}}
)

// {{classname}}Service is a service that implents the logic for the {{classname}}Servicer
// This service should implement the business logic for every endpoint for the {{classname}} API.
// Include any external packages or services that will be required by this service.
type {{classname}}Service struct {
}

// New{{classname}}Service creates a default api service
func New{{classname}}Service() {{classname}}Servicer {
return &{{classname}}Service{}
}{{#operations}}{{#operation}}

    // {{nickname}} - {{summary}}
    func (s *{{classname}}Service) {{nickname}}(ctx context.Context{{#allParams}}, {{paramName}} {{dataType}}{{/allParams}}) (ImplResponse, error) {
    {{#returnType}}
        ret, err := DBConnection.{{nickname}}(ctx{{#allParams}}, {{paramName}}{{/allParams}})
        return httpResponseWithBody(ret, err)
    {{/returnType}}
    {{^returnType}}
        err := DBConnection.{{nickname}}(ctx{{#allParams}}, {{paramName}}{{/allParams}})
        return httpResponse(err)
    {{/returnType}}
    }{{/operation}}{{/operations}}

