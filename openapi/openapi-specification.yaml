openapi: 3.0.3
info:
  description: "API for the period tracking app 'Cyla'"
  version: 0.1.0
  title: "Cyla App API"
servers:
  - url: "http://localhost:5000"
    description: "DEV server"
paths:
  /user:
    post:
      tags:
        - user
      description: Create a new user
      operationId: createUser
      requestBody:
        description: New user to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User created
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Id"
        "500":
          description: Error when creating user
  /user/{userId}:
    get:
      tags:
        - user
      description: Get a single user
      operationId: getUserById
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          $ref: "#/components/responses/UserNotFound"
        "500":
          description: Error when retrieving user

    put:
      tags:
        - user
      description: Update an user
      operationId: updateUser
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: Updated user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Error in request
        "404":
          $ref: "#/components/responses/UserNotFound"
        "500":
          description: Error when updating user
  /user/{userId}/restore:
    get:
      tags:
        - user
      description: Get key backup for user
      operationId: getRestoreData
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: Backup information found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/EncryptedAttribute"
        "404":
          $ref: "#/components/responses/UserNotFound"
  /day/{userId}:
    post:
      tags:
        - day
      description: Add a day for an user
      operationId: createDayEntry
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: New day to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Day"
      responses:
        "200":
          description: Day succesfully created
        "409":
          description: Conflicting request. Either day already exists or user doesn't
        "500":
          description: Error when creating day
    put:
      tags:
        - day
      description: Update a day for an user
      operationId: updateDayEntry
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: Updated day
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Day"
      responses:
        "200":
          description: Day updated successfully
        "404":
          description: Day or user not found
        "500":
          description: Error when updating user
  /day/{userId}/byDate:
    get:
      tags:
        - day
      description: Get the day from user at date
      operationId: getDaysByUserIdAndDate
      parameters:
        - $ref: "#/components/parameters/userId"
        - name: date
          in: query
          description: date(s) of the entries to get
          explode: true
          style: form
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Date"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "404":
          description: Day entry with date not found
        "500":
          description: Error when retrieving days
  /day/{userId}/byRange:
    get:
      tags:
        - day
      description: Get a range of dates from user. If not provided, end defaults to start. Both dates are inclusive.
      operationId: getDayByUserAndRange
      parameters:
        - $ref: "#/components/parameters/userId"
        - name: startDate
          in: query
          description: start date
          required: true
          schema:
            $ref: "#/components/schemas/Date"
        - name: endDate
          in: query
          description: end date
          required: false
          schema:
            $ref: "#/components/schemas/Date"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "500":
          description: Error when retrieving days
components:
  parameters:
    userId:
      description: Path parameter for id of user to return
      in: path
      name: userId
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    date:
      description: Query parameter for date
      name: date
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/Date"
  responses:
    DaysFound:
      description: (Empty) list of days found
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Day"
    UserNotFound:
      description: Error about missing user
      content:
        application/json:
          schema:
            type: string
  schemas:
    EncryptedAttribute:
      type: string
      format: byte
    Date:
      type: string
      format: date
    Id:
      type: string
      description: UUID
    User:
      type: object
      description: An User of the app
      properties:
        id:
          $ref: "#/components/schemas/Id"
        user_key_backup:
          $ref: "#/components/schemas/EncryptedAttribute"
    Day:
      type: object
      description: A Day entry
      properties:
        day_key:
          format: byte
          type: string
          description: Day key used to encrypt sensitive information for the day.
        version:
          format: byte
          type: string
        date:
          $ref: "#/components/schemas/Date"
        dayInfo:
          $ref: "#/components/schemas/EncryptedAttribute"
