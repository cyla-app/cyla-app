openapi: 3.0.3
info:
  description: "API for the period tracking app 'Cyla'"
  version: 0.1.0
  title: "Cyla App API"
servers:
  - url: "https://api.cyla.app:443"
    description: "Production server"
  - url: "http://localhost:5000"
    description: "Development server"
security:
  # By default, all endpoints are protected. There are some exceptions, like user sign up.
  - userJWTAuth: [ ]
paths:
  /user:
    post:
      # No authorization for this endpoint needed
      security: [ ]
      tags:
        - user
      description: Create a new user
      operationId: createUser
      requestBody:
        description: New user to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User created
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserCreatedResponse"
        "500":
          description: Error when creating user
  /user/{userId}:
    get:
      tags:
        - user
      description: Get a single user
      operationId: getUserById
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          $ref: "#/components/responses/UserNotFound"
        "500":
          description: Error when retrieving user

    put:
      tags:
        - user
      description: Update an user
      operationId: updateUser
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: Updated user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Error in request
        "404":
          $ref: "#/components/responses/UserNotFound"
        "500":
          description: Error when updating user
  /user/{userId}/restore:
    get:
      tags:
        - user
      description: Get key backup for user
      operationId: getRestoreData
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: Backup information found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/EncryptedAttribute"
        "404":
          $ref: "#/components/responses/UserNotFound"
  /day/{userId}:
    post:
      tags:
        - day
      description: Adds a day for an user or updates it
      operationId: modifyDayEntry
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: New day to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Day"
      responses:
        "200":
          description: Day succesfully created/updated
        "404":
          description: User not found
        "500":
          description: Error when creating/updating day
  /day/{userId}/withStats:
    post:
      tags:
        - day
      description: Updates or adds a day for an user, together with relevant updated statistics.
      operationId: modifyDayEntryWithStats
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: Information to add/update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DayStatsUpdate"
      responses:
        "200":
          description: Day and stats successfully created/updated
        "404":
          description: User not found
        "500":
          description: Error when creating/updating day and stats
  /day/{userId}/byDate:
    get:
      tags:
        - day
      description: Get the day from user at date
      operationId: getDaysByUserIdAndDate
      parameters:
        - $ref: "#/components/parameters/userId"
        - name: date
          in: query
          description: date(s) of the entries to get
          explode: true
          style: form
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DayDate"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "404":
          description: Day entry with date not found
        "500":
          description: Error when retrieving days
  /day/{userId}/byRange:
    get:
      tags:
        - day
      description: Get a range of dates from user. If not provided, end defaults to start. Both dates are inclusive.
      operationId: getDayByUserAndRange
      parameters:
        - $ref: "#/components/parameters/userId"
        - name: startDate
          in: query
          description: start date
          required: true
          schema:
            $ref: "#/components/schemas/DayDate"
        - name: endDate
          in: query
          description: end date
          required: false
          schema:
            $ref: "#/components/schemas/DayDate"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "500":
          description: Error when retrieving days
  /share/{shareId}/day/{userId}/byDate:
    get:
      security:
        - shareJWTAuth: []
      tags:
        - shareDay
      description: Get the shared days from user at date
      operationId: shareGetDaysByUserIdAndDate
      parameters:
        - $ref: "#/components/parameters/shareId"
        - $ref: "#/components/parameters/userId"
        - name: date
          in: query
          description: date(s) of the entries to get
          explode: true
          style: form
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DayDate"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "404":
          description: Day entry with date not found
        "500":
          description: Error when retrieving days
  /share/{shareId}/day/{userId}/byRange:
    get:
      security:
        - shareJWTAuth : []
      tags:
        - shareDay
      description: Get a range of shared dates from user. If not provided, end defaults to start. Both dates are inclusive.
      operationId: shareGetDayByUserAndRange
      parameters:
        - $ref: "#/components/parameters/shareId"
        - $ref: "#/components/parameters/userId"
        - name: startDate
          in: query
          description: start date
          required: true
          schema:
            $ref: "#/components/schemas/DayDate"
        - name: endDate
          in: query
          description: end date
          required: false
          schema:
            $ref: "#/components/schemas/DayDate"
      responses:
        "200":
          $ref: "#/components/responses/DaysFound"
        "500":
          description: Error when retrieving days
  /stats/{userId}:
    get:
      tags:
        - stats
      description: Get all stats for an user
      operationId: getStats
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          $ref: "#/components/responses/UserStatsFound"
        "404":
          description: Stats entry not found
        "500":
          description: Error when retrieving stats
  /stats/{userId}/periodStats:
    get:
      tags:
        - stats
      description: Get the periodStats for an user
      operationId: getPeriodStats
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          $ref: "#/components/responses/StatFound"
        "404":
          description: Period stat entry not found
        "500":
          description: Error when retrieving stat
  /share/{shareId}/stats/{userId}:
    get:
      tags:
        - shareStats
      security:
        - shareJWTAuth: []
      description: Get all shared stats in a share
      operationId: shareGetStats
      parameters:
        - $ref: "#/components/parameters/shareId"
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          $ref: "#/components/responses/UserStatsFound"
        "404":
          description: Stats entry not found
        "500":
          description: Error when retrieving stats
  /share/{shareId}/stats/{userId}/periodStats:
    get:
      tags:
        - shareStats
      security:
        - shareJWTAuth: [ ]
      description: Get the periodStats for a share
      operationId: shareGetPeriodStats
      parameters:
        - $ref : "#/components/parameters/shareId"
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          $ref: "#/components/responses/StatFound"
        "404":
          description: Period stat entry not found
        "500":
          description: Error when retrieving stat
  /share/{userId}:
    post:
      tags:
        - share
      description: Share / publish a set of days
      operationId: shareDays
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        description: Days to share, encrypted with share key
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShareInfoUpload"
      responses:
        "200":
          description: Successfully published data
          content:
            text/plain:
              schema:
                type: string
                description: Share id
                example: "AxQe21S"
        "404":
          $ref: "#/components/responses/UserNotFound"
        "400":
          description: One or more days don't exist
        "500":
          description: Server error
    get:
      tags:
        - share
      description: Get all existing shares for the user
      operationId: getShares
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: Shares for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Share"
  /share/auth/{shareId}:
    post:
      tags:
        - share
      security: [ ]
      description: Authenticate for a set of share data
      operationId: shareAuth
      parameters:
        - $ref: "#/components/parameters/shareId"
      requestBody:
        description: Hashed share passphare
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SharedPwdDTO"
      responses:
        "200":
          description: Auth succesful
          content:
            text/plain:
              schema:
                description: JWT Token
                type: string
components:
  parameters:
    userId:
      description: Path parameter for id of user to return
      in: path
      name: userId
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    shareId:
      description: Path parameter for the id of a share
      in: path
      name: shareId
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    date:
      description: Query parameter for date
      name: date
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/DayDate"
  responses:
    DaysFound:
      description: (Empty) list of days found
      headers:
        Cache-Control:
          schema:
            type: string
            default: max-age=86400
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Day"
    UserStatsFound:
      description: Stats for user found
      headers:
        Cache-Control:
          schema:
            type: string
            default: max-age=86400
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserStats"
    StatFound:
      description: (Single) stat for user found
      headers:
        Cache-Control:
          schema:
            type: string
            default: max-age=86400
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Statistic"
    UserNotFound:
      description: Error about missing user
      content:
        application/json:
          schema:
            type: string
    Unauthorized:
      description: Access token missing or invalid
      content:
        text/plain:
          schema:
            type: string
            description: Error message
  schemas:
    SharedPwdDTO:
      title: SharePwdDTO
      type: object
      properties:
        hashedPwd:
          title: hashedPwd
          type: string
          format: byte
      required:
        - hashedPwd
    EncryptedAttribute:
      title: encryptedAttribute
      type: string
      format: byte
    CryptoHashedAttribute:
      title: cryptoHashedAttribute
      type: string
      format: byte
      description: Attribute that has been hashed with a CHF
    DayDate:
      title: date
      description: ISO-8601-formatted date for an day entry. Only the date, no time is given.
      type: string
      format: date
    Id:
      title: id
      type: string
      description: UUID
    UserCreatedResponse:
      title: userCreatedResponse
      description: Information related to user signup. Includes the UUID of the new user and a fresh JWT for further requests.
      type: object
      properties:
        userId:
          $ref: "#/components/schemas/Id"
        jwt:
          title: bearerJWT
          type: string
          description: Fresh JWT for authentication
    User:
      title: user
      type: object
      description: An User of the app
      properties:
        id:
          $ref: "#/components/schemas/Id"
        username:
          title: username
          type: string
          description: unique username. Chosen by the user upon account creation
        user_key_backup:
          $ref: "#/components/schemas/EncryptedAttribute"
        auth_key:
          $ref: "#/components/schemas/EncryptedAttribute"
    Day:
      title: day
      type: object
      description: A Day entry
      properties:
        day_key:
          format: byte
          type: string
          description: Day key used to encrypt sensitive information for the day.
        version:
          type: integer
        date:
          $ref: "#/components/schemas/DayDate"
        dayInfo:
          $ref: "#/components/schemas/EncryptedAttribute"
      required:
        - version
        - dayInfo
        - date
        - day_key
    DayStatsUpdate:
      title: dayStatsUpdate
      type: object
      description: DTO for updating a day and relevant stats in one server call
      properties:
        day:
          $ref: "#/components/schemas/Day"
        userStats:
          $ref: "#/components/schemas/UserStats"
    UserStats:
      title: userStats
      type: object
      description: Data structures used by Cyla to compute stats like average Period length.
      properties:
        periodStats:
          $ref: "#/components/schemas/Statistic"
    Statistic:
      title: Single stat
      type: object
      description: Encrypted data structure for a single stat.
      properties:
        value:
          $ref: "#/components/schemas/EncryptedAttribute"
        prevHashValue:
          type: string
          description: Hash value for the previous version for this user's stat. For conflict detection.
        hashValue:
          type: string
          description: fnv32-HashSum for the value property
        version:
          type: string
      required:
        - value
    ShareInfoUpload:
      title: Share Info upload
      type: object
      description: Information needed to publish/share a set of days
      properties:
        days:
          type: array
          title: sharedDays
          items:
            $ref: "#/components/schemas/Day"
        shared_key_backup:
          $ref: "#/components/schemas/EncryptedAttribute"
        auth_key:
          $ref: "#/components/schemas/CryptoHashedAttribute"
        statistics:
          $ref: "#/components/schemas/UserStats"
    Share:
      title: Share Info
      type: object
      description: Info summarizing a set of shared days and statistics
      properties:
        owner:
          $ref: "#/components/schemas/Id"
        expirationDate:
          title: date
          description: ISO-8601-formatted date for an day entry. Only the date, no time is given.
          type: string
          format: date
        shared_key_backup:
          $ref: "#/components/schemas/EncryptedAttribute"
        shareId:
          $ref: "#/components/schemas/Id"
        auth_key:
          $ref: "#/components/schemas/CryptoHashedAttribute"
  securitySchemes:
    userJWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    shareJWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
