/*
 * Cyla App API
 *
 * API for the period tracking app 'Cyla'
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
)

// UserApiService is a service that implents the logic for the UserApiServicer
// This service should implement the business logic for every endpoint for the UserApi API.
// Include any external packages or services that will be required by this service.
type UserApiService struct {
}

// NewUserApiService creates a default api service
func NewUserApiService() UserApiServicer {
	return &UserApiService{}
}

// ChangePassPassphrase -
func (s *UserApiService) ChangePassPassphrase(ctx context.Context, userId string, changePassphraseDto ChangePassphraseDto) (response ImplResponse, err error) {
	err = DBConnection.ChangePassPassphrase(ctx, userId, changePassphraseDto)
	response, err = httpResponse(err)
	return
}

// CreateUser -
func (s *UserApiService) CreateUser(ctx context.Context, user User) (response ImplResponse, err error) {
	ret, err := DBConnection.CreateUser(ctx, user)
	response, err = httpResponseWithBody(ret, err)
	return
}

// GetRestoreData -
func (s *UserApiService) GetRestoreData(ctx context.Context, userId string) (response ImplResponse, err error) {
	ret, err := DBConnection.GetRestoreData(ctx, userId)
	response, err = httpResponseWithBody(ret, err)
	return
}

// GetUserById -
func (s *UserApiService) GetUserById(ctx context.Context, userId string) (response ImplResponse, err error) {
	ret, err := DBConnection.GetUserById(ctx, userId)
	response, err = httpResponseWithBody(ret, err)
	return
}
