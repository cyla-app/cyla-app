/*
 * Cyla App API
 *
 * API for the period tracking app 'Cyla'
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A CervixApiController binds http requests to an api service and writes the service results to the http response
type CervixApiController struct {
	service CervixApiServicer
}

// NewCervixApiController creates a default api controller
func NewCervixApiController(s CervixApiServicer) Router {
	return &CervixApiController{service: s}
}

// Routes returns all of the api route for the CervixApiController
func (c *CervixApiController) Routes() Routes {
	return Routes{
		{
			"GetCervixByDate",
			strings.ToUpper("Get"),
			"/cervix/{userId}",
			c.GetCervixByDate,
		},
	}
}

// GetCervixByDate -
func (c *CervixApiController) GetCervixByDate(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	query := r.URL.Query()
	userId, err := parseInt64Parameter(params["userId"])
	if err != nil {
		w.WriteHeader(500)
		return
	}
	date := query.Get("date")
	result, err := c.service.GetCervixByDate(r.Context(), userId, date)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
