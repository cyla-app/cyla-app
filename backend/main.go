/*
 * Cyla App API
 *
 * API for the period tracking app 'Cyla'
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"github.com/gorilla/handlers"
	"log"
	"net/http"
	"os"

	server "github.com/cyla-app/cyla-app/server"
)

func main() {
	log.Printf("Server started")
	// Initialize DB connection as global variable
	server.InitializeDBConnection()

	DayApiService := server.NewDayApiService()
	DayApiController := server.NewDayApiController(DayApiService)

	ShareApiService := server.NewShareApiService()
	ShareApiController := server.NewShareApiController(ShareApiService)

	ShareDayApiService := server.NewShareDayApiService()
	ShareDayApiController := server.NewShareDayApiController(ShareDayApiService)

	ShareStatsApiService := server.NewShareStatsApiService()
	ShareStatsApiController := server.NewShareStatsApiController(ShareStatsApiService)

	StatsApiService := server.NewStatsApiService()
	StatsApiController := server.NewStatsApiController(StatsApiService)

	UserApiService := server.NewUserApiService()
	UserApiController := server.NewUserApiController(UserApiService)

	LoginApiService := server.NewLoginApiService()
	LoginApiController := server.NewLoginApiController(LoginApiService)

	router := server.NewRouter(LoginApiController, DayApiController, ShareApiController, ShareDayApiController, ShareStatsApiController, StatsApiController, UserApiController)

	if env, ok := os.LookupEnv("CYLA_ENV"); ok && env == "dev" {
		headersOk := handlers.AllowedHeaders([]string{"Content-Type"})
		log.Fatal(http.ListenAndServe(":5000", handlers.CORS(headersOk)(router)))
	} else {
		log.Fatal(http.ListenAndServe(":5000", router))
	}
}
